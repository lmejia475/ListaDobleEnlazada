@page "/EliminarAntesDePosicionX"
@using ListaEnlazadaDoble.Services
@using ListaEnlazadaDoble.Models

<PageTitle>Eliminar Antes de posicion X</PageTitle>

<h1>Agregar a la Lista</h1>
<div>
    <input id="inputX" class="form-control" @bind-value="ValorNodo" />
    <button class="btn btn-primary" @onclick="AgregarAlFinal">Agregar al final</button>
    <button class="btn btn-primary" @onclick="AgregarAlInicio">Agregar al inicio</button>
</div>
<p>@Mensaje</p>


<br />

<h2>Ingrese poscicion X </h2>
<div>
    <input id="inputX" class="form-control" @bind-value="DatoAntesDeX" />
    <button class="btn btn-danger" @onclick="EliminarAntesDDePosicionX">Eliminar Antes de posicion X</button>
</div>
<p>@MensajeAntesDeX</p>
<div>
    <ul class="list-group">

        @{
            Nodo aux = Lista.PrimerNodo;
            while (aux != null)
            {
                <li class="list-group-item">@aux.Informacion</li>
                aux = aux.ReferenciaSiguiente;
            }

        }

    </ul>
</div>

@code {
    public int DatoAntesDeX;
    public string MensajeAntesDeX;
    public string Mensaje;
    public string ValorNodo;

    public LED Lista;

    protected override void OnInitialized()
    {
        Lista = new LED();
        base.OnInitialized();
    }

    private void AgregarAlFinal()
    {
        if (ValorNodo == "" || ValorNodo == null)
        {
            Mensaje = "Ingrese un valor";
            return;
        }
        Mensaje = Lista.AgregarAlFinal(AgregarNodo());
    }

    private void EliminarAntesDDePosicionX()
    {
        MensajeAntesDeX = Lista.EliminarAntesDePosicion(DatoAntesDeX);
    }
    private void AgregarAlInicio()
    {
        if (ValorNodo == "" || ValorNodo == null)
        {
            Mensaje = "Ingrese un valor";
            return;
        }
            Mensaje = Lista.AgregarAlInicio(AgregarNodo());
    }



    public Nodo AgregarNodo()
    {
        Nodo nuevoNodo = new Nodo(ValorNodo);
        return nuevoNodo;
    }
}
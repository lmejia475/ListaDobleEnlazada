@page "/EliminarDespuesDePosicionX"
@using ListaEnlazadaDoble.Services
@using ListaEnlazadaDoble.Models


<h3>Eliminar Nodo Despues De Posicion X</h3>

<h1>Agregar a la Lista</h1>
<div>
    <input id="inputX" class="form-control" @bind-value="ValorNodo" />
    <button class="btn btn-primary" @onclick="AgregarAlFinal">Agregar</button>
</div>
<p>@MensajeAgregarFinal</p>

<h2>Ingrese la Posicion X para eliminar despues de ella</h2>
<div>
    <input id="inputX" class="form-control" @bind-value="PosicionX" />
    <button class="btn btn-danger" @onclick="EliminarDespuesPosicionX">Eliminar Despues de Posicion X</button>
</div>
<p>@MensajeEliminarDespuesDePosicionX</p>

<div>
    <ul class="list-group">

        @{
            Nodo aux = Lista.PrimerNodo;
            while (aux != null)
            {
                <li class="list-group-item">@aux.Informacion</li>
                aux = aux.ReferenciaSiguiente;
            }

        }

    </ul>
</div>

@code {

    public string ValorNodo;
    public string MensajeAgregarFinal;
    public string MensajeEliminarDespuesDePosicionX;
    public int PosicionX;

    public LED Lista;

    protected override void OnInitialized()
    {
        Lista = new LED();
        base.OnInitialized();
    }

    private void AgregarAlFinal()
    {
        MensajeAgregarFinal = Lista.AgregarAlFinal(AgregarNodo());
    }

    private void EliminarDespuesPosicionX()
    {
        MensajeEliminarDespuesDePosicionX = Lista.EliminarDespuesDePosicionX(PosicionX);
    }

    public Nodo AgregarNodo()
    {
        Nodo nuevoNodo = new Nodo(ValorNodo);
        return nuevoNodo;
    }

}
